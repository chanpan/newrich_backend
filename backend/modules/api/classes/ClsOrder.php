<?phpnamespace backend\modules\api\classes;use appxq\sdii\utils\SDdate;use appxq\sdii\utils\VarDumper;use backend\modules\api\models\OrderDetail;use backend\modules\api\models\Orders;class ClsOrder{    /**     * @param $user_id     * @param bool $total     * @return array     */    public static function getOrder($user_id, $total=true){        $output = [];        $cucrrentMonth = Date('m');        $beginDate = date('Y').'-'.$cucrrentMonth.'-01';        $endDate = date('Y').'-'.$cucrrentMonth.'-31';//        return "{$beginDate} - {$endDate}";        $month = SDdate::getCurrentMonthYear();        $orders = Orders::find()            ->where('user_id=:user_id AND create_date between :beginDate AND :endDate AND rstat not in(0,3)',[                ':user_id' => $user_id,                ':beginDate' => $beginDate,                ':endDate' => $endDate        ])->all();        if($orders){            $totalPrice = 0;            $totalOrder = 0;            $totalScore = 0;            foreach($orders as $k=>$order){                $totalPrice += (int)$order->percent;                $totalOrder+= (int)$order->order;                $totalScore+= (int)$order->score;                $orderDetail = OrderDetail::find()->where('order_id=:order_id',[                    ':order_id' => $order->id                ])->all();                $order->order = number_format($order->order);                $order->score = number_format($order->score);                $output[]=[                    'order'=>$order,                    'order_detail'=>$orderDetail                ];            }            if($total === true){                $output['currentMonth'] = $month;                $output['totalPrice']=number_format($totalPrice);                $output['totalOrder']=number_format($totalOrder);                $output['totalScore']=number_format($totalScore);            }        }        return $output;    }}