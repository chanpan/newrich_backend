<?phpnamespace backend\modules\api\classes;use appxq\sdii\utils\VarDumper;use common\modules\user\models\User;use yii\db\Exception;use yii\db\Query;class ClsMember{    /**     * @param $id     * @param bool $showProfile     * @param bool $total     * @return array|User|\yii\db\ActiveRecord|null     */    public static function getMemberById($id,$showProfile=false, $totalStatus=true){        try{            $outptu = [];            $user = User::find()->where('id=:id',[                ':id' => $id            ])->orderBy(['id'=>SORT_DESC])->one();            unset($user->password_hash);            $avatar_base_url = isset($user->profile->avatar_base_url)?$user->profile->avatar_base_url:'';            $avatar_path = isset($user->profile->avatar_path)?$user->profile->avatar_path:'';            try{                $query = (new Query())                    ->select('*')                    ->from('payment')                    ->where(['user_id'=>$user->id])                    ->one();                if($query){                    $stDate = date($query['stdate']);                    $nextYearDate = date('Y-m-d', strtotime($stDate. " +365 days"));                    $sql="select * from payment WHERE  user_id=:user_id AND rstat not in(0,3) AND (CURRENT_DATE >= date(`stdate`) AND  date(`endate`) <= date(:nextYearDate)) order by id desc Limit 1";                    $params = [':user_id'=>$user->id,':nextYearDate'=>$nextYearDate];                    $data = \Yii::$app->db->createCommand($sql,$params)->queryOne();                    if($data){                        $user->profile->payment = isset($data['token'])?$data['token']:'';                    }                }            }catch(Exception $ex){            }            if(isset($user->profile->avatar_path)){                $storageUrl = isset(\Yii::$app->params['storageUrl'])?\Yii::$app->params['storageUrl']:'';                $user->profile->avatar_path = "{$storageUrl}/uploads/{$avatar_path}";            }            if($showProfile === true){                $orders = ClsOrder::getOrder($user->id,$totalStatus);                $outptu=[                    'user'=>$user,                    'profile'=>$user->profile,                    'order'=>$orders                ];                return $outptu;            }            return $user;        }catch (Exception $ex){        }    }    public static function getMemberAll($id,$total=true){        $users = User::find()->orderBy(['id'=>SORT_DESC])->all();        $outptu = [];        foreach ($users as $k=>$user){            $user = self::getMemberById($user->id);            unset($user->password_hash);            unset($user->auth_key);            $orders = ClsOrder::getOrder($user->id,$total);            $avatar_base_url = isset($user->profile->avatar_base_url)?$user->profile->avatar_base_url:'';            $avatar_path = isset($user->profile->avatar_path)?$user->profile->avatar_path:'';            $user->profile->avatar_path = "{$avatar_base_url}/{$avatar_path}";            $outptu[]=[                'count'=>count($users),                'user'=>$user,                'profile'=>$user->profile,                'order'=>$orders            ];        }    }}